(function (React$1, ReactDOM, d3) {
  'use strict';

  React$1 = React$1 && Object.prototype.hasOwnProperty.call(React$1, 'default') ? React$1['default'] : React$1;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const BackgroundCircle = ({radius, strokeWidth}) => (
  	React.createElement( 'circle', {
      r: radius, fill: "yellow", stroke: "black", 'stroke-width': strokeWidth })
  );

  const Eyes = ({radius, eyeRadiusX, eyeRadiusY}) => (
     React.createElement( React.Fragment, null,  
    	React.createElement( 'ellipse', { 
        cx: -radius/4, cy: -radius/3, rx: eyeRadiusX, ry: eyeRadiusY }),
    	React.createElement( 'ellipse', { 
        cx: radius/4, cy: -radius/3, rx: eyeRadiusX, ry: eyeRadiusY })
    )
  );

  const Mouth = ({mouthRadius, mouthWidth}) => {
    const mouthArc = d3.arc()
      .innerRadius(mouthRadius)
      .outerRadius(mouthRadius + mouthWidth)
      .startAngle(Math.PI / 2)
      .endAngle(Math.PI * 1.5);
    
  	return React.createElement( 'path', { d: mouthArc() });
  };

  const FaceContainer = ({children, width, height, centerX, centerY}) => (
  	React.createElement( 'svg', { width: width, height: height },
      React.createElement( 'g', { transform: `translate(${centerX}, ${centerY})` },
        children
      )
    )
        
  );

  const Face = ({
    width, 
    height, 
    centerX, 
    centerY, 
    r, 
    strokeWidth, 
    eyeRadiusX, 
    eyeRadiusY, 
    mouthRadius, 
    mouthWidth
  }) => (
  	React.createElement( FaceContainer, {
      width: width, height: height, centerX: centerX, centerY: centerY },
      React.createElement( BackgroundCircle, { 
        radius: centerY - strokeWidth /2, strokeWidth: strokeWidth }),

      React.createElement( Eyes, { 
        radius: r, eyeRadiusX: eyeRadiusX, eyeRadiusY: eyeRadiusY }),

      React.createElement( Mouth, { 
        mouthRadius: mouthRadius, mouthWidth: mouthWidth })
        
    )
  );

  const width = 166;
  const height = 166;

  const array = d3.range(10);

  const App = () => array.map(() => (
  	 React$1.createElement( Face, {
      width: width, height: height, centerX: width / 2, centerY: height / 2, strokeWidth: 10, mouthWidth: 10, r: 70, mouthRadius: 40, eyeRadiusX: 10 + Math.random() * 5, eyeRadiusY: 20 + Math.random() * 5 })

  ));

  const rootElement = document.getElementById('root');
  ReactDOM.render(React$1.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIkJhY2tncm91bmRDaXJjbGUuanMiLCJFeWVzLmpzIiwiTW91dGguanMiLCJGYWNlQ29udGFpbmVyLmpzIiwiRmFjZS5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBCYWNrZ3JvdW5kQ2lyY2xlID0gKHtyYWRpdXMsIHN0cm9rZVdpZHRofSkgPT4gKFxuXHQ8Y2lyY2xlXG4gICAgcj17cmFkaXVzfVxuICAgIGZpbGw9XCJ5ZWxsb3dcIlxuICAgIHN0cm9rZT1cImJsYWNrXCJcbiAgICBzdHJva2Utd2lkdGg9e3N0cm9rZVdpZHRofVxuICAvPlxuKTtcbiIsImV4cG9ydCBjb25zdCBFeWVzID0gKHtyYWRpdXMsIGV5ZVJhZGl1c1gsIGV5ZVJhZGl1c1l9KSA9PiAoXG4gICA8PiBcbiAgXHQ8ZWxsaXBzZSBcbiAgICAgIGN4PXstcmFkaXVzLzR9IFxuICAgICAgY3k9ey1yYWRpdXMvM30gXG4gICAgICByeD17ZXllUmFkaXVzWH0gXG4gICAgICByeT17ZXllUmFkaXVzWX1cbiAgICAvPlxuICBcdDxlbGxpcHNlIFxuICAgICAgY3g9e3JhZGl1cy80fSBcbiAgICAgIGN5PXstcmFkaXVzLzN9IFxuICAgICAgcng9e2V5ZVJhZGl1c1h9IFxuICAgICAgcnk9e2V5ZVJhZGl1c1l9XG4gICAgLz5cbiAgPC8+XG4pOyIsImltcG9ydCB7IGFyYyB9IGZyb20gJ2QzJztcblxuZXhwb3J0IGNvbnN0IE1vdXRoID0gKHttb3V0aFJhZGl1cywgbW91dGhXaWR0aH0pID0+IHtcbiAgY29uc3QgbW91dGhBcmMgPSBhcmMoKVxuICAgIC5pbm5lclJhZGl1cyhtb3V0aFJhZGl1cylcbiAgICAub3V0ZXJSYWRpdXMobW91dGhSYWRpdXMgKyBtb3V0aFdpZHRoKVxuICAgIC5zdGFydEFuZ2xlKE1hdGguUEkgLyAyKVxuICAgIC5lbmRBbmdsZShNYXRoLlBJICogMS41KTtcbiAgXG5cdHJldHVybiA8cGF0aCBkPXttb3V0aEFyYygpfS8+O1xufTtcbiIsImV4cG9ydCBjb25zdCBGYWNlQ29udGFpbmVyID0gKHtjaGlsZHJlbiwgd2lkdGgsIGhlaWdodCwgY2VudGVyWCwgY2VudGVyWX0pID0+IChcblx0PHN2ZyB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fT5cbiAgICA8ZyB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtjZW50ZXJYfSwgJHtjZW50ZXJZfSlgfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2c+XG4gIDwvc3ZnPlxuICAgICAgXG4pO1xuIiwiaW1wb3J0IHtCYWNrZ3JvdW5kQ2lyY2xlfSBmcm9tICcuL0JhY2tncm91bmRDaXJjbGUnXG5pbXBvcnQge0V5ZXN9IGZyb20gJy4vRXllcydcbmltcG9ydCB7TW91dGh9IGZyb20gJy4vTW91dGgnXG5pbXBvcnQge0ZhY2VDb250YWluZXJ9IGZyb20gJy4vRmFjZUNvbnRhaW5lcidcblxuZXhwb3J0IGNvbnN0IEZhY2UgPSAoe1xuICB3aWR0aCwgXG4gIGhlaWdodCwgXG4gIGNlbnRlclgsIFxuICBjZW50ZXJZLCBcbiAgciwgXG4gIHN0cm9rZVdpZHRoLCBcbiAgZXllUmFkaXVzWCwgXG4gIGV5ZVJhZGl1c1ksIFxuICBtb3V0aFJhZGl1cywgXG4gIG1vdXRoV2lkdGhcbn0pID0+IChcblx0PEZhY2VDb250YWluZXJcbiAgICB3aWR0aD17d2lkdGh9XG4gICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgY2VudGVyWD17Y2VudGVyWH1cbiAgICBjZW50ZXJZPXtjZW50ZXJZfVxuICAgIFxuICA+XG4gICAgPEJhY2tncm91bmRDaXJjbGUgXG4gICAgICByYWRpdXM9e2NlbnRlclkgLSBzdHJva2VXaWR0aCAvMn0gXG4gICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgLz5cblxuICAgIDxFeWVzIFxuICAgICAgcmFkaXVzPXtyfSBcbiAgICAgIGV5ZVJhZGl1c1g9e2V5ZVJhZGl1c1h9IFxuICAgICAgZXllUmFkaXVzWT17ZXllUmFkaXVzWX1cbiAgICAvPlxuXG4gICAgPE1vdXRoIFxuICAgICAgbW91dGhSYWRpdXM9e21vdXRoUmFkaXVzfVxuICAgICAgbW91dGhXaWR0aD17bW91dGhXaWR0aH1cbiAgICAvPlxuICAgICAgXG4gIDwvRmFjZUNvbnRhaW5lcj5cbik7XG5cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7RmFjZX0gZnJvbSAnLi9GYWNlJztcbmltcG9ydCB7cmFuZ2V9IGZyb20gJ2QzJztcblxuXG5jb25zdCB3aWR0aCA9IDE2NjtcbmNvbnN0IGhlaWdodCA9IDE2NjtcblxuY29uc3QgYXJyYXkgPSByYW5nZSgxMCk7XG5cbmNvbnN0IEFwcCA9ICgpID0+IGFycmF5Lm1hcCgoKSA9PiAoXG5cdCA8RmFjZVxuICAgIHdpZHRoPXt3aWR0aH1cbiAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICBjZW50ZXJYPXt3aWR0aCAvIDJ9XG5cdFx0Y2VudGVyWT17aGVpZ2h0IC8gMn1cblx0XHRzdHJva2VXaWR0aCA9ezEwfVxuXHRcdG1vdXRoV2lkdGg9ezEwfVxuICAgIHI9ezcwfVxuICAgIG1vdXRoUmFkaXVzPXs0MH1cblx0XHRleWVSYWRpdXNYPXsxMCArIE1hdGgucmFuZG9tKCkgKiA1fVxuICAgIGV5ZVJhZGl1c1k9ezIwICsgTWF0aC5yYW5kb20oKSAqIDV9XG4gIC8+XG5cbikpO1xuXG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpOyJdLCJuYW1lcyI6WyJhcmMiLCJyYW5nZSIsIlJlYWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7RUFBTyxNQUFNLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDO0VBQ3RELENBQUM7RUFDRCxJQUFJLEdBQUcsTUFBTyxFQUNWLE1BQUssUUFBUSxFQUNiLFFBQU8sT0FBTyxFQUNkLGdCQUFjLGFBQVksQ0FDMUI7RUFDSixDQUFDOztFQ1BNLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQztFQUNyRCxHQUFHO0VBQ0gsR0FBRztFQUNILE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFFLEVBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFFLEVBQ2QsSUFBSSxVQUFXLEVBQ2YsSUFBSSxZQUFXO0VBRXJCLEdBQUc7RUFDSCxNQUFNLElBQUksTUFBTSxDQUFDLENBQUUsRUFDYixJQUFJLENBQUMsTUFBTSxDQUFDLENBQUUsRUFDZCxJQUFJLFVBQVcsRUFDZixJQUFJLFlBQVcsQ0FDZjtFQUNOLEdBQUs7RUFDTCxDQUFDOztFQ2JNLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEtBQUs7RUFDcEQsRUFBRSxNQUFNLFFBQVEsR0FBR0EsTUFBRyxFQUFFO0VBQ3hCLEtBQUssV0FBVyxDQUFDLFdBQVcsQ0FBQztFQUM3QixLQUFLLFdBQVcsQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0VBQzFDLEtBQUssVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0VBQzVCLEtBQUssUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7RUFDN0I7RUFDQSxDQUFDLE9BQU8sK0JBQU0sR0FBRyxRQUFRLElBQUcsQ0FBRSxDQUFDO0VBQy9CLENBQUM7O0VDVk0sTUFBTSxhQUFhLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDekUsQ0FBQyw4QkFBSyxPQUFPLEtBQU0sRUFBQyxRQUFRO0VBQzVCLElBQUksNEJBQUcsV0FBVyxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0VBQ3BELE1BQU8sUUFBUztFQUNoQixLQUFRO0VBQ1IsR0FBUTtFQUNSO0VBQ0EsQ0FBQzs7RUNGTSxNQUFNLElBQUksR0FBRyxDQUFDO0VBQ3JCLEVBQUUsS0FBSztFQUNQLEVBQUUsTUFBTTtFQUNSLEVBQUUsT0FBTztFQUNULEVBQUUsT0FBTztFQUNULEVBQUUsQ0FBQztFQUNILEVBQUUsV0FBVztFQUNiLEVBQUUsVUFBVTtFQUNaLEVBQUUsVUFBVTtFQUNaLEVBQUUsV0FBVztFQUNiLEVBQUUsVUFBVTtFQUNaLENBQUM7RUFDRCxDQUFDLHFCQUFDO0VBQ0YsSUFBSSxPQUFPLEtBQU0sRUFDYixRQUFRLE1BQU8sRUFDZixTQUFTLE9BQVEsRUFDakIsU0FBUztFQUdiLElBQUkscUJBQUM7RUFDTCxNQUFNLFFBQVEsT0FBTyxHQUFHLFdBQVcsRUFBRSxDQUFFLEVBQ2pDLGFBQWEsYUFBWTtBQUUvQjtFQUNBLElBQUkscUJBQUM7RUFDTCxNQUFNLFFBQVEsQ0FBRSxFQUNWLFlBQVksVUFBVyxFQUN2QixZQUFZLFlBQVc7QUFFN0I7RUFDQSxJQUFJLHFCQUFDO0VBQ0wsTUFBTSxhQUFhLFdBQVksRUFDekIsWUFBWSxZQUFXLENBQ3ZCO0VBQ047RUFDQSxHQUFrQjtFQUNsQixDQUFDOztFQ25DRCxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUM7RUFDbEIsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDO0FBQ25CO0VBQ0EsTUFBTSxLQUFLLEdBQUdDLFFBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN4QjtFQUNBLE1BQU0sR0FBRyxHQUFHLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQztFQUM1QixFQUFFQyx1QkFBQztFQUNILElBQUksT0FBTyxLQUFNLEVBQ2IsUUFBUSxNQUFPLEVBQ2YsU0FBUyxLQUFLLEdBQUcsQ0FBRSxFQUNyQixTQUFTLE1BQU0sR0FBRyxDQUFFLEVBQ3BCLGFBQWMsRUFBRyxFQUNqQixZQUFZLEVBQUcsRUFDYixHQUFHLEVBQUcsRUFDTixhQUFhLEVBQUcsRUFDbEIsWUFBWSxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUUsRUFDakMsWUFBWSxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUUsQ0FDbkM7QUFDSjtFQUNBLENBQUMsQ0FBQyxDQUFDO0FBQ0g7RUFDQSxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0VBQ3BELFFBQVEsQ0FBQyxNQUFNLENBQUNBLHVCQUFDLFNBQUcsRUFBRyxFQUFFLFdBQVcsQ0FBQzs7OzsifQ==